parameters:
- name: winPoolName
  displayName: Windows Pool Name
  type: string
  default: pool-windows-2019
- name: macOSPoolName
  displayName: MacOS Pool Name
  type: string
  default: macOS-12
- name: dotnet_sdk_3_1
  displayName: .NET Core 3.1
  default: 3.1.x
- name: dotnet_sdk_6
  displayName: .NET 6
  type: string
  default: 6.0.x
- name: dotnet_sdk_7
  displayName: .NET 7
  type: string
  default: 7.0.x
- name: testFramework
  displayName: Test Framework
  type: string
  default: netcoreapp3.1

variables:
  EnableTestCoverage: true
  TestCoverageLocation: $(Pipeline.Workspace)/artifacts

pr: none
trigger: none

jobs:
- job: Build
  displayName: Build
  pool:
    name: ${{ parameters.winPoolName }}

  steps:
  - task: UseDotNet@2
    displayName: 'Install .NET Core 3.1 SDK'
    inputs:
      packageType: sdk
      version: ${{ parameters.dotnet_sdk_3_1 }}

  - task: PowerShell@2
    displayName: Initialize Environment
    inputs:
      pwsh: true
      targetType: filePath
      filePath: ./tools/TestFx/Utilities/CommonUtility.ps1

  - task: DotNetCoreCLI@2
    displayName: Build Azure PowerShell Solution
    inputs:
      command: custom
      custom: msbuild
      arguments: 'build.proj -t:"Clean;Build" -p:"Configuration=Debug"'

  - task: PublishPipelineArtifact@1
    displayName: Publish Build Artifacts
    inputs:
      targetPath: artifacts
      artifact: BuildArtifacts

- job: TestCoverage
  dependsOn: Build
  timeoutInMinutes: 600
  pool:
    vmImage: ${{ parameters.macOSPoolName }}

  steps:
  - task: DownloadPipelineArtifact@2
    displayName: Download pipeline artifacts
    inputs:
      targetPath: artifacts
      artifactName: BuildArtifacts

  - task: PowerShell@2
    displayName: Test AutoRest-Based Cmdlets
    condition: succeeded()
    inputs:
      pwsh: true
      workingDirectory: 'artifacts/Debug'
      targetType: inline
      script: |
        Install-Module -Name Pester -RequiredVersion 4.10.1 -Force
        Import-Module (Join-Path -Path . -ChildPath Az.Accounts | Join-Path -ChildPath Az.Accounts.psd1) -Force

        $PreErrorActionPreference = $ErrorActionPreference
        $ErrorActionPreference = "SilentlyContinue"

        Get-ChildItem -Path . -Filter test-module.ps1 -File -Recurse | ForEach-Object {
          try {
            . $_ -Isolated
          }
          catch {
            Write-Host $_.Exception
          }
        }

        $ErrorActionPreference = $PreErrorActionPreference

  - task: PowerShell@2
    displayName: Analyze Test Coverage
    condition: succeeded()
    inputs:
      pwsh: true
      targetType: filePath
      filePath: ./tools/TestFx/Coverage/AnalyzeTestCoverage.ps1
      arguments: -CalcBaseline

  - task: PublishPipelineArtifact@1
    displayName: Publish Test Coverage Result
    condition: always()
    inputs:
      targetPath: artifacts
      artifact: testcoverage
